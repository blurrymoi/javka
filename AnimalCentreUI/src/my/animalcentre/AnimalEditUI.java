/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.animalcentre;

import animalcentre.Animal;
import animalcentre.AnimalManagerImpl;
import animalcentre.Gender;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.sql.DataSource;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author blurry
 */
public class AnimalEditUI extends javax.swing.JFrame {

    private Animal animal;
    private DataSource dataSource;
    private static Logger logger;

    /**
     * Creates new form AnimalEditUI
     */
    public AnimalEditUI() {
        initComponents();
    }

    
    AnimalEditUI(Animal anim, DataSource dataSource, final Logger logger) {
        initComponents();
        
        this.animal = anim;
        this.dataSource = dataSource;
        this.logger = logger;
        
        comboYear.setModel(new AnimalUI.DateModel());
        setToAnim(anim);
        
         // for logging uncaught exceptions
                Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {
                    public void uncaughtException(Thread t, Throwable e) {
                        logger.log(Level.SEVERE, "Uncaught Exception in thread '" + t.getName() + "'", e);
                        System.exit(1);
                    }
                });
    
        /*
        
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                labelName.setText(LanguageWizard.getString("Name"));
                labelYear.setText(LanguageWizard.getString("Year_of_birth"));
                labelGender.setText(LanguageWizard.getString("Gender"));
                labelNeutered.setText(LanguageWizard.getString("Neutered"));
            }
        }); */   
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelName = new java.awt.Label();
        textFieldName = new java.awt.TextField();
        labelYear = new java.awt.Label();
        comboYear = new javax.swing.JComboBox();
        labelGender = new java.awt.Label();
        comboGender = new javax.swing.JComboBox();
        labelNeutered = new java.awt.Label();
        jCheckBoxNeutered = new javax.swing.JCheckBox();
        buttonOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Main/resources/Bundle"); // NOI18N
        labelName.setText(bundle.getString("NAME:")); // NOI18N

        textFieldName.setText(bundle.getString("TEXTFIELD1")); // NOI18N

        labelYear.setText(bundle.getString("YEAR OF BIRTH:")); // NOI18N

        comboYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        labelGender.setText(bundle.getString("GENDER:")); // NOI18N

        comboGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "FEMALE", "MALE" }));
        comboGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", LanguageWizard.getString("FEMALE"), LanguageWizard.getString("MALE")}));

        labelNeutered.setText(bundle.getString("NEUTERED:")); // NOI18N

        buttonOK.setText(bundle.getString("OK")); // NOI18N
        buttonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNeutered, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxNeutered)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(buttonOK)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textFieldName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboYear, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboGender, 0, 144, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNeutered, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxNeutered))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(buttonOK)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOKActionPerformed
        
        Animal animal = this.animal;
        String formerAnimal = this.animal.toString();
        animal = getAnimal(animal);
        if (animal != null) {
            AnimalManagerImpl manager = new AnimalManagerImpl(dataSource);
            manager.updateAnimal(animal);
            logger.log(Level.INFO, "Animal [{0}] updated to: {1}; formerly was {2}", new Object[]{String.valueOf(animal.getAnimalID()), animal, formerAnimal});
            this.dispose();
        }

    }//GEN-LAST:event_buttonOKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (java.util.ResourceBundle.getBundle("Main/resources/Bundle").getString("NIMBUS").equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnimalEditUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnimalEditUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnimalEditUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnimalEditUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnimalEditUI().setVisible(true);
            }
        });
    }

    private void setToAnim(Animal anim) {
        textFieldName.setText(anim.getName());
        int currentYear = (Integer)comboYear.getItemAt(0);//Integer.parseInt((String)comboYear.getItemAt(0));
        
        comboYear.setSelectedIndex(currentYear - anim.getYearOfBirth());
        if (anim.getGender() == null) {
            comboGender.setSelectedIndex(0);
        } else {
            switch (anim.getGender()) {
                case MALE: {
                    comboGender.setSelectedIndex(2);
                    break;
                }
                case FEMALE: {
                    comboGender.setSelectedIndex(1);
                    break;
                }
                default:
                    throw new IllegalArgumentException("Some weird gender occurred while editing animal " + anim);
            }
        }
        jCheckBoxNeutered.setSelected(anim.isNeutered());
    }

    public Animal getAnimal(Animal animal) {

        AnimalManagerImpl manager = new AnimalManagerImpl(dataSource);

        Pattern p = Pattern.compile("[A-Za-z]?[a-zěěšřžýáíéťúäôůňóĺŕ ]*\\d*");
        String name = textFieldName.getText();

        if (name.equals("")) {
            JOptionPane.showMessageDialog(new JFrame(LanguageWizard.getString("Message")), LanguageWizard.getString("You_must_set_the_name"));
        } else {
            if (!p.matcher(name).matches()) {
                JOptionPane.showMessageDialog(new JFrame(LanguageWizard.getString("Message")), LanguageWizard.getString("Pattern_not_match"));
            } else {
                animal.setName(textFieldName.getText());

                if (comboYear.getSelectedItem() == null) {
                    JOptionPane.showMessageDialog(new JFrame(LanguageWizard.getString("Message")), LanguageWizard.getString("Select_date"));
                } else {
                    String yr = String.valueOf(comboYear.getSelectedItem());
                    animal.setYearOfBirth(Integer.parseInt(yr));

                    int gender = comboGender.getSelectedIndex();
                    switch (gender) {
                        case 0: animal.setGender(null);
                            break;
                        case 1: animal.setGender(Gender.FEMALE);
                            break;
                        case 2: animal.setGender(Gender.MALE);
                            break;
                        default: throw new IllegalArgumentException("Illegal index in Gender");
                    }

                    animal.setNeutered(jCheckBoxNeutered.isSelected());

                    if (animal == null) {
                        JOptionPane.showMessageDialog(new JFrame(LanguageWizard.getString("Message")), LanguageWizard.getString("can_NOT_be_null")); // ??
                        throw new IllegalArgumentException(LanguageWizard.getString("can_NOT_be_null"));
                    }
                    return animal;
                }
            }
        }
        return null;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonOK;
    private javax.swing.JComboBox comboGender;
    private javax.swing.JComboBox comboYear;
    private javax.swing.JCheckBox jCheckBoxNeutered;
    private java.awt.Label labelGender;
    private java.awt.Label labelName;
    private java.awt.Label labelNeutered;
    private java.awt.Label labelYear;
    private java.awt.TextField textFieldName;
    // End of variables declaration//GEN-END:variables
}
