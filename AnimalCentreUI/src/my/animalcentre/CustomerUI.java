/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.animalcentre;

import animalcentre.Adoption;
import animalcentre.AdoptionManagerImpl;
import animalcentre.Animal;
import animalcentre.Customer;
import animalcentre.CustomerManagerImpl;
import animalcentre.DBstuff;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import java.util.regex.Pattern;
import javax.sql.DataSource;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.apache.commons.dbcp2.BasicDataSource;
import org.apache.derby.impl.tools.sysinfo.Main;

/**
 *
 * @author blurry
 */
public class CustomerUI extends javax.swing.JDialog {

    private DataSource dataSource;
    private static Logger logger;
    private FileHandler fh;
    private List<Customer> myCustomers = new ArrayList<>();

    /**
     * Creates new form NewCustomer
     */
    public CustomerUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    CustomerUI(FileHandler fh, DataSource dataSource) {

        logger = Logger.getLogger(AnimCentrUI.class.getName());
        //logger.setUseParentHandlers(false);
        
        logger.addHandler(fh);
        SimpleFormatter formatter = new SimpleFormatter();
        fh.setFormatter(formatter);
        
        this.dataSource = dataSource;
        initComponents();
        
        UIManager.put("OptionPane.yesButtonText", LanguageWizard.getString("yes"));
        UIManager.put("OptionPane.noButtonText", LanguageWizard.getString("no"));
        
        try {
            populateJList(jListCustomers, dataSource);
        } catch (SQLException ex) {
            Logger.getLogger(CustomerUI.class.getName()).log(Level.SEVERE, "Could not populate Customer list", ex);
        }
        
        // for logging uncaught exceptions
        Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {
            public void uncaughtException(Thread t, Throwable e) {
                logger.log(Level.SEVERE, "Uncaught Exception in thread '" + t.getName() + "'", e);
                System.exit(1);
            }
        });

    }

    public void populateJList(JList list, DataSource dataSource) throws SQLException {
        
        DefaultListModel model = new DefaultListModel(); //create a new list model

        CustomerManagerImpl manager = new CustomerManagerImpl(dataSource);
        myCustomers = new ArrayList<>(manager.findAllCustomers());

        for (Customer customer : myCustomers) {
            String itemCode = customer.toString(); //get the element in column "item_code"
            model.addElement(itemCode); //add each item to the model
        }

        list.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buttonAdd = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListCustomers = new javax.swing.JList();
        buttonEdit = new javax.swing.JButton();
        buttonRemove = new javax.swing.JButton();
        labelPhone = new javax.swing.JLabel();
        labelAddress = new javax.swing.JLabel();
        textFieldName = new javax.swing.JTextField();
        labelName = new javax.swing.JLabel();
        textFieldAddress = new javax.swing.JTextField();
        textFieldPhone = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, LanguageWizard.getString("Customer")
            , javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 12))); // NOI18N
    jPanel1.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N

    java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Main/resources/Bundle"); // NOI18N
    buttonAdd.setText(bundle.getString("ADD")); // NOI18N
    buttonAdd.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            buttonAddActionPerformed(evt);
        }
    });

    jListCustomers.setModel(new javax.swing.AbstractListModel() {
        String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
        public int getSize() { return strings.length; }
        public Object getElementAt(int i) { return strings[i]; }
    });
    jScrollPane3.setViewportView(jListCustomers);

    buttonEdit.setText(bundle.getString("EDIT")); // NOI18N
    buttonEdit.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            buttonEditActionPerformed(evt);
        }
    });

    buttonRemove.setText(bundle.getString("REMOVE")); // NOI18N
    buttonRemove.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            buttonRemoveActionPerformed(evt);
        }
    });

    labelPhone.setText(bundle.getString("PHONE NUMBER:")); // NOI18N

    labelAddress.setText(bundle.getString("ADDRESS:")); // NOI18N

    labelName.setText(bundle.getString("NAME:")); // NOI18N

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(buttonEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonRemove, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labelName, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(labelPhone, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(labelAddress, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(textFieldName, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                        .addComponent(textFieldAddress)
                        .addComponent(textFieldPhone))))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(labelName)
                .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(labelAddress)
                .addComponent(textFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(labelPhone)
                .addComponent(textFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addComponent(buttonAdd)
            .addGap(35, 35, 35)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(buttonEdit)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(buttonRemove)
                    .addContainerGap())
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        getCustomer();

        if (evt.getSource() == buttonAdd) {
            DefaultListModel listModel = (DefaultListModel) jListCustomers.getModel();
            listModel.removeAllElements();
            try {
                populateJList(jListCustomers, dataSource);
            } catch (SQLException ex) {
                Logger.getLogger(AnimalUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonAddActionPerformed

    private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
        if (jListCustomers.getSelectedValue() != null) {

            String selected = jListCustomers.getSelectedValue().toString();
            String subs = selected.substring(selected.indexOf("[")+1, selected.lastIndexOf("]"));
            Long id = (long) Integer.parseInt(subs);

            CustomerManagerImpl manag = new CustomerManagerImpl(dataSource);
            Customer custom = manag.getCustomerByID(id);

            CustomerEditUI customEdit = new CustomerEditUI(custom, dataSource, logger);
            customEdit.setVisible(true);
            customEdit.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

            //will refresh the Customer list once the "Edit customers" window is closed
            customEdit.addWindowListener(new WindowAdapter() {

                @Override
                public void windowClosed(WindowEvent e) {

                    DefaultListModel listModel = (DefaultListModel) jListCustomers.getModel();
                    listModel.removeAllElements();
                    try {
                        populateJList(jListCustomers, dataSource);
                    } catch (SQLException ex) {
                        Logger.getLogger(CustomerUI.class.getName()).log(Level.SEVERE, "Could not populate list.", ex);
                    }

                }
            });
        }
    }//GEN-LAST:event_buttonEditActionPerformed

    private void buttonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveActionPerformed
        if (jListCustomers.getSelectedValue() != null) {

            String selected = jListCustomers.getSelectedValue().toString();
            String subs = selected.substring(selected.indexOf("[")+1, selected.lastIndexOf("]"));
            Long id = (long) Integer.parseInt(subs);

            CustomerManagerImpl manag = new CustomerManagerImpl(dataSource);
            Customer custom = manag.getCustomerByID(id);

            if (isCurrentlyAdoptive(custom)) {
                JOptionPane.showMessageDialog(new JFrame(LanguageWizard.getString("Message")), LanguageWizard.getString("Currently_adoptive"));
            } else {
            
            int reply = JOptionPane.showConfirmDialog(null, java.util.ResourceBundle.getBundle("Main/resources/Bundle").getString("ARE_YOU_SURE_YOU_WANT_TO_REMOVE") + custom.getName() + "?", LanguageWizard.getString("Confirm"), JOptionPane.YES_NO_OPTION);
            
            if (reply == JOptionPane.YES_OPTION) {

                manag.deleteCustomer(custom);
                logger.log(Level.INFO, "Customer removed: {0}", custom);

                if (evt.getSource() == buttonRemove) {
                    DefaultListModel listModel = (DefaultListModel) jListCustomers.getModel();
                    listModel.removeAllElements();
                    try {
                        populateJList(jListCustomers, dataSource);
                    } catch (SQLException ex) {
                        Logger.getLogger(CustomerUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }
            }
        }
    }//GEN-LAST:event_buttonRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (java.util.ResourceBundle.getBundle("Main/resources/Bundle").getString("NIMBUS").equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CustomerUI dialog = new CustomerUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private boolean isCurrentlyAdoptive(Customer customer){
        AdoptionManagerImpl manag = new AdoptionManagerImpl(dataSource);
        List<Adoption> allAdoptions = manag.findAllAdoptionsByCustomer(customer);
        
        return !allAdoptions.isEmpty();
    }

    public Customer getCustomer() {

        CustomerManagerImpl manager = new CustomerManagerImpl(dataSource);
        Customer customer = new Customer();

        Pattern p = Pattern.compile("[A-Za-zĚŠČŘŽÝÁÍÍÉŤÚÄÔŮŇÓĹŔěščřžýáÍíéťúňóĺŕ ]*\\d*");
        Pattern addre = Pattern.compile("\\d*[A-ZĚŠČŘŽÝÁÍÉŤÚŇÓĹŔa-zěščřžýáÍíéťúňóĺŕ ]*\\d*");
        Pattern phon = Pattern.compile("[+]?\\d*");
        String name = textFieldName.getText();
        String address = textFieldAddress.getText();
        String phone = textFieldPhone.getText();

        if (name.equals("")) {
            JOptionPane.showMessageDialog(new JFrame(LanguageWizard.getString("Message")), LanguageWizard.getString("You_must_set_the_name"));
        } else {
            if (!p.matcher(name).matches()) {
                JOptionPane.showMessageDialog(new JFrame(LanguageWizard.getString("Message")), LanguageWizard.getString("Pattern_not_match_cus"));
            } else {
                customer.setName(textFieldName.getText());

                if (address.equals("")) {
                    JOptionPane.showMessageDialog(new JFrame(LanguageWizard.getString("Message")), LanguageWizard.getString("You_must_set_the_address"));
                } else {
                    if (!addre.matcher(address).matches()) {
                        JOptionPane.showMessageDialog(new JFrame(LanguageWizard.getString("Message")), LanguageWizard.getString("Pattern_not_match_address"));
                    } else {
                        customer.setAddress(textFieldAddress.getText());

                        if (phone.equals("")) {
                            JOptionPane.showMessageDialog(new JFrame(LanguageWizard.getString("Message")), LanguageWizard.getString("You_must_set_the_phone"));
                        } else {
                            if (!phon.matcher(phone).matches()) {
                                JOptionPane.showMessageDialog(new JFrame(LanguageWizard.getString("Message")), LanguageWizard.getString("Pattern_not_match_phone"));
                            } else {
                                customer.setPhoneNumber(textFieldPhone.getText());

                                if (customer == null) {
                                    JOptionPane.showMessageDialog(new JFrame(LanguageWizard.getString("Message")), LanguageWizard.getString("can_NOT_be_null")); // ??
                                    throw new IllegalArgumentException(LanguageWizard.getString("can_NOT_be_null"));
                                }

                                manager.createCustomer(customer);
                                logger.log(Level.INFO, "Customer added: {0}", customer);
                                return customer;
                            }
                        }
                    }

                }
            }
        }
        return null;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JButton buttonRemove;
    private javax.swing.JList jListCustomers;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelAddress;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPhone;
    private javax.swing.JTextField textFieldAddress;
    private javax.swing.JTextField textFieldName;
    private javax.swing.JTextField textFieldPhone;
    // End of variables declaration//GEN-END:variables
}
